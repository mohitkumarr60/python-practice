PROBLEM:
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.

SOLUTION:

class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        paranthesis=0
        curlyBraces=0
        squareBracket=0

        for i in s:
            if i=='(':
                paranthesis +=1
            elif i==')':
                paranthesis -=1
            elif i=='{':
                curlyBraces +=1
            elif i=='}':
                curlyBraces -=1
            elif i=='[':
                squareBracket +=1
            elif i==']':
                squareBracket -=1
            
            if paranthesis<0 and curlyBraces<0 and squareBracket<0:
                return False

        return paranthesis==0 and curlyBraces==0 and squareBracket == 0
